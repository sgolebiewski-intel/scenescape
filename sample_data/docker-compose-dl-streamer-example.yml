# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

# prefix for volume and container names, override with the environment variable COMPOSE_PROJECT_NAME
name: scenescape

networks:
  scenescape:

secrets:
  root-cert:
    file: ${SECRETSDIR}/certs/scenescape-ca.pem
  web-cert:
    file: ${SECRETSDIR}/certs/scenescape-web.crt
  web-key:
    file: ${SECRETSDIR}/certs/scenescape-web.key
  vdms-client-cert:
    file: ${SECRETSDIR}/certs/scenescape-vdms-c.crt
  vdms-client-key:
    file: ${SECRETSDIR}/certs/scenescape-vdms-c.key
  vdms-server-cert:
    file: ${SECRETSDIR}/certs/scenescape-vdms-s.crt
  vdms-server-key:
    file: ${SECRETSDIR}/certs/scenescape-vdms-s.key
  django:
    file: ${SECRETSDIR}/django
  controller.auth:
    environment: CONTROLLER_AUTH
  browser.auth:
    file: ${SECRETSDIR}/browser.auth
  calibration.auth:
    file: ${SECRETSDIR}/calibration.auth

services:
  ntpserv:
    image: dockurr/chrony
    networks:
      scenescape:
    # ports:
    #   - 123:123/udp
    restart: on-failure
    pids_limit: 1000

  broker:
    image: eclipse-mosquitto
    # ports:
    #   - "1883:1883"
    configs:
      - source: mosquitto-secure
        target: /mosquitto/config/mosquitto.conf
    volumes:
      - ${SECRETSDIR}:/mosquitto/secrets
    networks:
      scenescape:
        aliases:
          - broker.scenescape.intel.com
    user: "${UID:-1000}:${GID:-1000}"
    pids_limit: 1000

  pgserver:
    image: postgres:17.6
    environment:
      POSTGRES_USER: scenescape
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: scenescape
    networks:
      - scenescape
    volumes:
      - vol-db:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  web:
    image: scenescape-manager:${VERSION:-latest}
    init: true
    networks:
      scenescape:
        aliases:
          - web.scenescape.intel.com
    depends_on:
      - pgserver
    ports:
      - "443:443"
    command: >
      webserver
      --dbhost pgserver
      --dbtype postgres
      --dbport 5432
      --broker broker.scenescape.intel.com
      --brokerauth /run/secrets/browser.auth
      --brokerrootcert /run/secrets/certs/scenescape-ca.pem
    healthcheck:
      test: "curl --insecure -X GET https://web.scenescape.intel.com:443/api/v1/database-ready | grep 'true'"
      interval: 10s
      timeout: 120s
      retries: 10
      start_period: 10s
    environment:
      - EXAMPLEDB=/home/scenescape/SceneScape/sample_data/exampledb.tar.bz2
      - SUPASS
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse
    security_opt:
      - apparmor:unconfined
    # web interface needs access to the media files
    volumes:
      - vol-media:/workspace/media
      - vol-sample-data:/home/scenescape/SceneScape/sample_data
      - vol-migrations:/workspace/migrations
    secrets:
      - source: root-cert
        target: certs/scenescape-ca.pem
      - source: web-cert
        target: certs/scenescape-web.crt
      - source: web-key
        target: certs/scenescape-web.key
      - django
      - controller.auth
      - browser.auth
      - calibration.auth
    restart: always
    pids_limit: 1000

  scene:
    image: scenescape-controller:${VERSION:-latest}
    init: true
    networks:
      scenescape:
    depends_on:
      web:
        condition: service_healthy
      broker:
        condition: service_started
      ntpserv:
        condition: service_started
      # vdms:
      #   condition: service_started
    environment:
      - CONTROLLER_ENABLE_METRICS
      - CONTROLLER_METRICS_ENDPOINT
      - CONTROLLER_METRICS_EXPORT_INTERVAL_S
      - CONTROLLER_ENABLE_TRACING
      - CONTROLLER_TRACING_ENDPOINT
      - CONTROLLER_TRACING_SAMPLE_RATIO
    command: >
      --restauth /run/secrets/controller.auth
      --brokerauth /run/secrets/controller.auth
      --broker broker.scenescape.intel.com
      --ntp ntpserv
    # mount the trackerconfig file to the container
    configs:
      - source: tracker-config
        target: /home/scenescape/SceneScape/tracker-config.json
    volumes:
      - vol-media:/home/scenescape/SceneScape/media
      - vol-sample-data:/home/scenescape/SceneScape/sample_data
    secrets:
      - source: root-cert
        target: certs/scenescape-ca.pem
      - source: vdms-client-key
        target: certs/scenescape-vdms-c.key
      - source: vdms-client-cert
        target: certs/scenescape-vdms-c.crt
      - django
      - controller.auth
    restart: always
    pids_limit: 1000

  # vdms:
  #   image: intellabs/vdms:latest
  #   init: true
  #   networks:
  #     scenescape:
  #       aliases:
  #         - vdms.scenescape.intel.com
  #   environment:
  #     - OVERRIDE_ca_file=/run/secrets/certs/scenescape-ca.pem
  #     - OVERRIDE_cert_file=/run/secrets/certs/scenescape-vdms-s.crt
  #     - OVERRIDE_key_file=/run/secrets/certs/scenescape-vdms-s.key
  #   secrets:
  #     - source: root-cert
  #       target: certs/scenescape-ca.pem
  #     - source: vdms-server-cert
  #       target: certs/scenescape-vdms-s.crt
  #     - source: vdms-server-key
  #       target: certs/scenescape-vdms-s.key
  #   restart: always
  #   pids_limit: 1000

  mediaserver:
    image: bluenviron/mediamtx:1.14.0
    networks:
      scenescape:
        aliases:
          - mediaserver
    #  ports:
    #    - "8554:8554"
    restart: always
    pids_limit: 1000

  queuing-cams:
    image: linuxserver/ffmpeg:version-8.0-cli
    command: -nostdin -re -stream_loop -1 -i /workspace/media/qcam1.ts -re -stream_loop -1 -i /workspace/media/qcam2.ts -map 0:v -c copy -f rtsp -rtsp_transport tcp rtsp://mediaserver:8554/queuing-cam1 -map 1:v -c copy -f rtsp -rtsp_transport tcp rtsp://mediaserver:8554/queuing-cam2
    volumes:
      - vol-sample-data:/workspace/media
    networks:
      scenescape:
    depends_on:
      - mediaserver
    restart: always
    pids_limit: 1000

  retail-cams:
    image: linuxserver/ffmpeg:version-8.0-cli
    command: -nostdin -re -stream_loop -1 -i /workspace/media/apriltag-cam1.ts -re -stream_loop -1 -i /workspace/media/apriltag-cam2.ts -map 0:v -c copy -f rtsp -rtsp_transport tcp rtsp://mediaserver:8554/retail-cam1 -map 1:v -c copy -f rtsp -rtsp_transport tcp rtsp://mediaserver:8554/retail-cam2
    volumes:
      - vol-sample-data:/workspace/media
    networks:
      scenescape:
    depends_on:
      - mediaserver
    restart: always
    pids_limit: 1000

  retail-video:
    image: docker.io/intel/dlstreamer-pipeline-server:3.1.0-ubuntu24
    networks:
      scenescape:
    tty: true
    entrypoint: ["./run.sh"]
    ports:
      - "8080:8080"
    devices:
      - "/dev/dri:/dev/dri"
    group_add:
      - "109"
      - "110"
      - "992"
    device_cgroup_rules:
      - "c 189:* rmw"
      - "c 209:* rmw"
      - "a 189:* rwm"
    depends_on:
      broker:
        condition: service_started
      ntpserv:
        condition: service_started
      retail-cams:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-I", "-s", "http://localhost:8080/pipelines"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    environment:
      - RUN_MODE=EVA
      - DETECTION_DEVICE=CPU
      - CLASSIFICATION_DEVICE=CPU
      - GENICAM=Balluff
      - GST_DEBUG="1,gencamsrc:2"
      - ADD_UTCTIME_TO_METADATA=true
      - APPEND_PIPELINE_NAME_TO_PUBLISHER_TOPIC=false
      - MQTT_HOST=broker.scenescape.intel.com
      - MQTT_PORT=1883
      - REST_SERVER_PORT=8080
    configs:
      - source: retail-config
        target: /home/pipeline-server/config.json
    volumes:
      - ./dlstreamer-pipeline-server/user_scripts:/home/pipeline-server/user_scripts
      - vol-dlstreamer-pipeline-server-pipeline-root:/var/cache/pipeline_root:uid=1999,gid=1999
      - vol-sample-data:/home/pipeline-server/videos
      - vol-models:/home/pipeline-server/models
    secrets:
      - source: root-cert
        target: certs/scenescape-ca.pem
    pids_limit: 1000

  queuing-video:
    image: docker.io/intel/dlstreamer-pipeline-server:3.1.0-ubuntu24
    networks:
      scenescape:
    tty: true
    entrypoint: ["./run.sh"]
    ports:
      - "8081:8080"
    devices:
      - "/dev/dri:/dev/dri"
    group_add:
      - "109"
      - "110"
      - "992"
    device_cgroup_rules:
      - "c 189:* rmw"
      - "c 209:* rmw"
      - "a 189:* rwm"
    depends_on:
      broker:
        condition: service_started
      ntpserv:
        condition: service_started
      queuing-cams:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-I", "-s", "http://localhost:8080/pipelines"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    environment:
      - RUN_MODE=EVA
      - DETECTION_DEVICE=CPU
      - CLASSIFICATION_DEVICE=CPU
      - GENICAM=Balluff
      - GST_DEBUG="1,gencamsrc:2"
      - ADD_UTCTIME_TO_METADATA=true
      - APPEND_PIPELINE_NAME_TO_PUBLISHER_TOPIC=false
      - MQTT_HOST=broker.scenescape.intel.com
      - MQTT_PORT=1883
      - REST_SERVER_PORT=8080
    configs:
      - source: queuing-config
        target: /home/pipeline-server/config.json
    volumes:
      - ./dlstreamer-pipeline-server/user_scripts:/home/pipeline-server/user_scripts
      - vol-dlstreamer-pipeline-server-pipeline-root:/var/cache/pipeline_root:uid=1999,gid=1999
      - vol-sample-data:/home/pipeline-server/videos
      - vol-models:/home/pipeline-server/models
    secrets:
      - source: root-cert
        target: certs/scenescape-ca.pem
    pids_limit: 1000

  camcalibration:
    image: scenescape-camcalibration
    init: true
    networks:
      scenescape:
    command: camcalibration --broker broker.scenescape.intel.com --resturl https://web.scenescape.intel.com:443/api/v1
    depends_on:
      web:
        condition: service_healthy
      broker:
        condition: service_started
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse
    security_opt:
      - apparmor:unconfined
    environment:
      - EGL_PLATFORM=surfaceless
      - "DBROOT"
      - NETVLAD_MODEL_DIR=/usr/local/lib/python3.10/dist-packages/third_party/netvlad
    volumes:
      - vol-media:/workspace/media
      - vol-datasets:/workspace/datasets
      - vol-netvlad_models:/usr/local/lib/python3.10/dist-packages/third_party/netvlad
    secrets:
      - source: root-cert
        target: certs/scenescape-ca.pem
      - django
      - calibration.auth
    restart: always
    pids_limit: 1000

configs:
  mosquitto-secure:
    file: ./dlstreamer-pipeline-server/mosquitto/mosquitto-secure.conf
  tracker-config:
    file: ./controller/config/tracker-config.json
  retail-config:
    file: ./dlstreamer-pipeline-server/retail-config.json
  queuing-config:
    file: ./dlstreamer-pipeline-server/queuing-config.json

volumes:
  vol-db:
  vol-media:
  vol-migrations:
  vol-datasets:
  vol-sample-data:
  vol-models:
  vol-netvlad_models:
    driver: local
  vol-dlstreamer-pipeline-server-pipeline-root:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
