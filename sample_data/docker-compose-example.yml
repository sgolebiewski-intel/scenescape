# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

# prefix for volume and container names, override with the environment variable COMPOSE_PROJECT_NAME
name: scenescape

networks:
  scenescape:

secrets:
  root-cert:
    file: ${SECRETSDIR}/certs/scenescape-ca.pem
  broker-cert:
    file: ${SECRETSDIR}/certs/scenescape-broker.crt
  broker-key:
    file: ${SECRETSDIR}/certs/scenescape-broker.key
  web-cert:
    file: ${SECRETSDIR}/certs/scenescape-web.crt
  web-key:
    file: ${SECRETSDIR}/certs/scenescape-web.key
  vdms-client-cert:
    file: ${SECRETSDIR}/certs/scenescape-vdms-c.crt
  vdms-client-key:
    file: ${SECRETSDIR}/certs/scenescape-vdms-c.key
  vdms-server-cert:
    file: ${SECRETSDIR}/certs/scenescape-vdms-s.crt
  vdms-server-key:
    file: ${SECRETSDIR}/certs/scenescape-vdms-s.key
  django:
    file: ${SECRETSDIR}/django
  percebro.auth:
    file: ${SECRETSDIR}/percebro.auth
  controller.auth:
    environment: CONTROLLER_AUTH
  browser.auth:
    file: ${SECRETSDIR}/browser.auth
  calibration.auth:
    file: ${SECRETSDIR}/calibration.auth

services:
  ntpserv:
    image: dockurr/chrony
    networks:
      scenescape:
    # ports:
    #   - 123:123/udp
    restart: on-failure

  broker:
    image: scenescape-broker:${VERSION:-latest}
    networks:
      scenescape:
        aliases:
          - broker.scenescape.intel.com
    # ports:
    #   - "1883:1883"
    secrets:
      - source: broker-cert
        target: scenescape-broker.crt
      - source: broker-key
        target: scenescape-broker.key
    restart: always

  # uncomment this section to use eclipe mosquitto broker
  # broker:
  #   image: eclipse-mosquitto
  #   ports:
  #     - "1883:1883"
  #   configs:
  #    - source: mosquitto-secure
  #      target: /mosquitto/config/mosquitto.conf
  #   volumes:
  #     - ${SECRETSDIR}:/mosquitto/secrets
  #   networks:
  #     scenescape:
  #       aliases:
  #        - broker.scenescape.intel.com
  #   user: "${UID}:${GID}"

  pgserver:
    image: scenescape-manager:${VERSION:-latest}
    init: true
    networks:
      scenescape:
    environment:
      - "SUPASS"
      - "DBROOT"
    command: database --preloadexample
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse
    security_opt:
      - apparmor:unconfined
    volumes:
      - vol-db:/workspace/db
      - vol-migrations:/workspace/migrations
      - vol-media:/workspace/media
      - vol-sample-data:/home/scenescape/SceneScape/sample_data
    secrets:
      - django
      - controller.auth
      - percebro.auth
      - browser.auth
      - calibration.auth
    restart: always

  web:
    image: scenescape-manager:${VERSION:-latest}
    init: true
    networks:
      scenescape:
        aliases:
          - web.scenescape.intel.com
    depends_on:
      - pgserver
    ports:
      - "443:443"
    environment:
      - "DBROOT"
    command: webserver --dbhost pgserver --broker broker.scenescape.intel.com --brokerauth /run/secrets/browser.auth --brokerrootcert /run/secrets/certs/scenescape-ca.pem
    healthcheck:
      test: "curl --insecure -X GET https://web.scenescape.intel.com:443/api/v1/database-ready | grep 'true'"
      interval: 10s
      timeout: 120s
      retries: 10
      start_period: 10s
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse
    security_opt:
      - apparmor:unconfined
    # web interface needs access to the media files
    volumes:
      - vol-media:/workspace/media
    secrets:
      - source: root-cert
        target: certs/scenescape-ca.pem
      - source: web-cert
        target: certs/scenescape-web.crt
      - source: web-key
        target: certs/scenescape-web.key
      - django
      - browser.auth
    restart: always

  scene:
    image: scenescape-controller:${VERSION:-latest}
    user: "scenescape"
    init: true
    networks:
      scenescape:
    depends_on:
      web:
        condition: service_healthy
      broker:
        condition: service_started
      ntpserv:
        condition: service_started
      # vdms:
      #   condition: service_started
    # mount the trackerconfig file to the container
    command: --restauth /run/secrets/controller.auth --brokerauth /run/secrets/controller.auth --broker broker.scenescape.intel.com --ntp ntpserv
    configs:
      - source: tracker-config
        target: /home/scenescape/SceneScape/tracker-config.json
    volumes:
      - vol-media:/home/scenescape/SceneScape/media
    secrets:
      - source: root-cert
        target: certs/scenescape-ca.pem
      - source: vdms-client-key
        target: certs/scenescape-vdms-c.key
      - source: vdms-client-cert
        target: certs/scenescape-vdms-c.crt
      - django
      - controller.auth
    restart: always

  # vdms:
  #   image: intellabs/vdms:latest
  #   init: true
  #   networks:
  #     scenescape:
  #       aliases:
  #         - vdms.scenescape.intel.com
  #   environment:
  #     - OVERRIDE_ca_file=/run/secrets/certs/scenescape-ca.pem
  #     - OVERRIDE_cert_file=/run/secrets/certs/scenescape-vdms-s.crt
  #     - OVERRIDE_key_file=/run/secrets/certs/scenescape-vdms-s.key
  #   secrets:
  #     - source: root-cert
  #       target: certs/scenescape-ca.pem
  #     - source: vdms-server-cert
  #       target: certs/scenescape-vdms-s.crt
  #     - source: vdms-server-key
  #       target: certs/scenescape-vdms-s.key
  #   restart: always

  retail-video:
    image: scenescape-percebro:${VERSION:-latest}
    init: true
    networks:
      scenescape:
    depends_on:
      web:
        condition: service_healthy
      broker:
        condition: service_started
      ntpserv:
        condition: service_started
    #  - ovms # Need to uncomment this to use ovms
    command:
      - "percebro"
      - "--camera=sample_data/apriltag-cam1.mp4"
      - "--cameraid=camera1"
      - '--intrinsics={"fov":70}'
      - "--camera=sample_data/apriltag-cam2.mp4"
      - "--cameraid=camera2"
      - '--intrinsics={"fov":70}'
      - "--camerachain=retail"
      - "--ntp=ntpserv"
      - "--auth=/run/secrets/percebro.auth"
      - "broker.scenescape.intel.com"
    devices:
      - "/dev/dri:/dev/dri"
    volumes:
      - vol-models:/opt/intel/openvino/deployment_tools/intel_models
      - vol-sample-data:/home/scenescape/SceneScape/sample_data
    secrets:
      - source: root-cert
        target: certs/scenescape-ca.pem
      - percebro.auth
    restart: always

  queuing-video:
    image: scenescape-percebro:${VERSION:-latest}
    init: true
    networks:
      scenescape:
    depends_on:
      web:
        condition: service_healthy
      broker:
        condition: service_started
      ntpserv:
        condition: service_started
    #  - ovms # Need to uncomment this to use ovms
    command:
      - "percebro"
      - "--camera=sample_data/qcam1.mp4"
      - "--cameraid=atag-qcam1"
      - '--intrinsics={"fx":905,"fy":905,"cx":640,"cy":360}'
      - "--camera=sample_data/qcam2.mp4"
      - "--cameraid=atag-qcam2"
      - '--intrinsics={"fx":905,"fy":905,"cx":640,"cy":360}'
      - "--camerachain=retail"
      - "--ntp=ntpserv"
      - "--auth=/run/secrets/percebro.auth"
      - "broker.scenescape.intel.com"
    devices:
      - "/dev/dri:/dev/dri"
    volumes:
      - vol-models:/opt/intel/openvino/deployment_tools/intel_models
      - vol-sample-data:/home/scenescape/SceneScape/sample_data
    secrets:
      - source: root-cert
        target: certs/scenescape-ca.pem
      - percebro.auth
    restart: always

  camcalibration:
    image: scenescape-camcalibration:${VERSION:-latest}
    init: true
    networks:
      scenescape:
    command: camcalibration --broker broker.scenescape.intel.com --resturl https://web.scenescape.intel.com:443/api/v1
    depends_on:
      web:
        condition: service_healthy
      broker:
        condition: service_started
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse
    security_opt:
      - apparmor:unconfined
    environment:
      - EGL_PLATFORM=surfaceless
      - "DBROOT"
      - NETVLAD_MODEL_DIR=/usr/local/lib/python3.10/dist-packages/third_party/netvlad
    volumes:
      - vol-media:/workspace/media
      - vol-datasets:/workspace/datasets
      - vol-netvlad_models:/usr/local/lib/python3.10/dist-packages/third_party/netvlad
    secrets:
      - source: root-cert
        target: certs/scenescape-ca.pem
      - django
      - calibration.auth
    restart: always

  # ovms: # Need to uncomment this section to use ovms
  #   image: openvino/model_server:2024.1-gpu
  #   user: "${UID}:${GID}"
  #   networks:
  #     scenescape:
  #   command: --config_path /opt/ml/ovms-config.json --port 9000 --rest_port 9001 --cache_dir /models/ovms/cache
  #   volumes:
  #    - vol-models:/opt/ml/
  #    - vol-models:/models/
  #   restart: always

  mqtt_recorder:
    image: scenescape-manager:${VERSION:-latest}
    init: true
    environment:
      - "SUPASS"
    networks:
      scenescape:
    command: bash -c "SUPASS=${SUPASS} PYTHONPATH=/workspace tests/perf_tests/scene_perf/scene_mqtt_recorder.py --output /workspace/scene_mqtt_recorder.log --interval 1 --duration 60"
    privileged: true
    volumes:
      - ./:/workspace
    secrets:
      - source: root-cert
        target: certs/scenescape-ca.pem
    tty: true

configs:
  # uncomment this section when using eclipe mosquitto broker
  # mosquitto-secure:
  #   file: ./dlstreamer-pipeline-server/mosquitto/mosquitto-secure.conf
  tracker-config:
    file: ./controller/config/tracker-config.json

volumes:
  vol-db:
  vol-media:
  vol-migrations:
  vol-datasets:
  vol-sample-data:
  vol-models:
  vol-netvlad_models:
    driver: local
