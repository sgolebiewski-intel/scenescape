#!/bin/bash

# SPDX-FileCopyrightText: (C) 2021 - 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

APPDIR=/workspace
MODELDIR=/opt/intel/openvino/deployment_tools/intel_models
IMAGE=scenescape-manager:latest
WSUSER=${WSUSER:-scenescape}
XAUTHORITY=${XAUTHORITY:-$HOME/.Xauthority}

if [ $# = 0 ] ; then
    echo Please specify what to start
    exit 1
fi

export PWD=`pwd -P`

ARGS=""

LOCALTZ=$(readlink /etc/localtime | sed 's#/var/db/timezone/zoneinfo/##')
DCKARGS="-e TZ=${LOCALTZ} --privileged --cap-add=SYS_ADMIN --cap-add SYS_PTRACE"
DCKPROJECT="scenescape"

DAEMON=0
MQTT=1

while [ $# -gt 0 -a x$(expr substr "${1:-empty}" 1 2) = "x--" ] ; do
    case "$1" in
        --shell)
            ARGS="${ARGS} $1"
            shift
            ;;
        --super-shell)
            ARGS="${ARGS} $1"
            shift
            ;;
        --daemon)
            DCKARGS="${DCKARGS} -d"
            DAEMON=1
            shift
            ;;
        --network)
            DCKNETWORK=$2
            shift 2
            ;;
        --project)
            DCKPROJECT=$2
            shift 2
            ;;
        --add-host)
            DCKARGS="${DCKARGS} $1=$2"
            shift 2
            ;;
        --image)
            IMAGE="$2"
            shift 2
            echo "USING IMAGE ${IMAGE}"
            ;;
        --volume)
            DCKARGS="${DCKARGS} -v $2"
            shift 2
            ;;
    esac
done

if [[ $DAEMON = 0 ]] ; then
    DCKARGS="${DCKARGS} --rm"
    # Pass X11
    if [ -n "${DISPLAY}" ] ; then
        DCKARGS="${DCKARGS} -e DISPLAY -v ${XAUTHORITY}:/home/${WSUSER}/.Xauthority"
    fi
    if [ -z "${DCKNETWORK}" ] ; then
        DCKNETWORK=host
    fi
    if [[ -t 1 ]] ; then
        # Use interactive -it flag when on tty
        DCKARGS="${DCKARGS} -it"
    fi
    # HDDL
    DCKARGS="${DCKARGS} -v /var/tmp:/var/tmp -v /dev/shm:/dev/shm"
fi

# if [ $# = 0 ] ; then
#     ARGS="${ARGS} --shell"
# fi

IFACE=$(ip route show default | awk '/default/ {if ($2 == "via") print $5 ; else print $3}' | head -1)
MACADDR=$(cat /sys/class/net/$IFACE/address)
DCKARGS="${DCKARGS} -e MACADDR=${MACADDR} -e SECRETSDIR -e DBHOST"

if [ "x$1" = "xserver" ] ; then
    DCKARGS="${DCKARGS} -p 8000:8000"
    DCKARGS="${DCKARGS} -p 5432:5432"
    DCKNAME=scenescape
    if [ "$2" = "--broker" ] ; then
        MQTT=0
    fi
    if [[ $MQTT = 1 ]] ; then
        DCKARGS="${DCKARGS} -p 1883:1883"
    fi
fi

if [ -n "${DCKNAME}" ] ; then
    DCKARGS="${DCKARGS} --name ${DCKNAME}"
fi
if [ -n "${DCKNETWORK}" ] ; then
    DCKARGS="${DCKARGS} --network=${DCKNETWORK}"
fi

# Make sure uid is 1000 or greater
OWNER=$(stat -c '%u' .)
if (($OWNER < 1000)) ; then
    echo "Owner of ${PWD} is system user. Aborting."
    exit 1
fi

HOSTDIR="${PWD}"
DCKARGS=($DCKARGS)
ARGS=($ARGS)
IFS=
DCKARGS+=(-e)
DCKARGS+=(HOSTDIR="${HOSTDIR}")

# for scenescape-controller-test image we need to override the image user and group IDs to match the host
# this is needed to avoid permission issues with the mounted volumes
if [[ "${IMAGE}" == *"scenescape-controller-test"* ]] ; then
    echo "Using controller-test image, setting user and group IDs"
    DCKARGS+=(-u $(id -u):$(id -g))
fi

docker run ${DCKARGS[@]} -v "${HOSTDIR}":${APPDIR} \
        -e http_proxy -e https_proxy -e no_proxy -e PROJECT="${DCKPROJECT}"\
        -v ${DCKPROJECT}_vol-models:${MODELDIR} -v ${DCKPROJECT}_vol-sample-data:/home/scenescape/SceneScape/sample_data -e PYTHONPATH="${APPDIR}"\
        -v ${HOSTDIR}/manager/secrets:/run/secrets \
        ${IMAGE} ${ARGS[@]} $@
STATUS=$?
exit ${STATUS}
