# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

# prefix for volume and container names, override with the environment variable COMPOSE_PROJECT_NAME
name: scenescape

networks:
  scenescape:

secrets:
  root-cert:
    file: ${SECRETSDIR}/certs/scenescape-ca.pem
  broker-cert:
    file: ${SECRETSDIR}/certs/scenescape-broker.crt
  broker-key:
    file: ${SECRETSDIR}/certs/scenescape-broker.key
  web-cert:
    file: ${SECRETSDIR}/certs/scenescape-web.crt
  web-key:
    file: ${SECRETSDIR}/certs/scenescape-web.key
  vdms-client-cert:
    file: ${SECRETSDIR}/certs/scenescape-vdms-c.crt
  vdms-client-key:
    file: ${SECRETSDIR}/certs/scenescape-vdms-c.key
  vdms-server-cert:
    file: ${SECRETSDIR}/certs/scenescape-vdms-s.crt
  vdms-server-key:
    file: ${SECRETSDIR}/certs/scenescape-vdms-s.key
  django:
    file: ${SECRETSDIR}/django
  percebro.auth:
    file: ${SECRETSDIR}/percebro.auth
  controller.auth:
    environment: CONTROLLER_AUTH
  browser.auth:
    file: ${SECRETSDIR}/browser.auth
  calibration.auth:
    file: ${SECRETSDIR}/calibration.auth

services:
  ntpserv:
    image: dockurr/chrony
    networks:
      scenescape:
    # ports:
    #   - 123:123/udp
    restart: on-failure

  broker:
    image: eclipse-mosquitto
    ports:
      - "1883:1883"
    configs:
      - source: mosquitto-insecure
        target: /mosquitto/config/mosquitto.conf
    volumes:
      - ${SECRETSDIR}:/mosquitto/secrets
    networks:
      scenescape:
        aliases:
          - broker.scenescape.intel.com
    user: "${UID:-1000}:${GID:-1000}"



  pgserver:
    image: scenescape-manager:${VERSION:-latest}
    init: true
    networks:
      scenescape:
    environment:
      - "SUPASS"
      - "DBROOT"
    command: database --preloadexample
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse
    security_opt:
      - apparmor:unconfined
    volumes:
      - vol-db:/workspace/db
      - vol-migrations:/workspace/migrations
      - vol-media:/workspace/media
      - vol-sample-data:/home/scenescape/SceneScape/sample_data
    secrets:
      - django
      - controller.auth
      - percebro.auth
      - browser.auth
      - calibration.auth
    restart: always

  web:
    image: scenescape-manager:${VERSION:-latest}
    init: true
    networks:
      scenescape:
        aliases:
          - web.scenescape.intel.com
    depends_on:
      - pgserver
    ports:
      - "443:443"
    environment:
      - "DBROOT"
    command: webserver --dbhost pgserver --broker broker.scenescape.intel.com --brokerauth /run/secrets/browser.auth --brokerrootcert /run/secrets/certs/scenescape-ca.pem
    healthcheck:
      test: "curl --insecure -X GET https://web.scenescape.intel.com:443/api/v1/database-ready | grep 'true'"
      interval: 10s
      timeout: 120s
      retries: 10
      start_period: 10s
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse
    security_opt:
      - apparmor:unconfined
    # web interface needs access to the media files
    volumes:
      - vol-media:/workspace/media
    secrets:
      - source: root-cert
        target: certs/scenescape-ca.pem
      - source: web-cert
        target: certs/scenescape-web.crt
      - source: web-key
        target: certs/scenescape-web.key
      - django
      - browser.auth
    restart: always

  scene:
    image: scenescape-controller:${VERSION:-latest}
    user: "scenescape"
    init: true
    networks:
      scenescape:
    depends_on:
      web:
        condition: service_healthy
      broker:
        condition: service_started
      ntpserv:
        condition: service_started
      # vdms:
      #   condition: service_started
    # mount the trackerconfig file to the container
    command: --restauth /run/secrets/controller.auth --brokerauth /run/secrets/controller.auth --broker broker.scenescape.intel.com --ntp ntpserv
    configs:
      - source: tracker-config
        target: /home/scenescape/SceneScape/tracker-config.json
    volumes:
      - vol-media:/home/scenescape/SceneScape/media
    secrets:
      - source: root-cert
        target: certs/scenescape-ca.pem
      - source: vdms-client-key
        target: certs/scenescape-vdms-c.key
      - source: vdms-client-cert
        target: certs/scenescape-vdms-c.crt
      - django
      - controller.auth
    restart: always

  # vdms:
  #   image: intellabs/vdms:latest
  #   init: true
  #   networks:
  #     scenescape:
  #       aliases:
  #         - vdms.scenescape.intel.com
  #   environment:
  #     - OVERRIDE_ca_file=/run/secrets/certs/scenescape-ca.pem
  #     - OVERRIDE_cert_file=/run/secrets/certs/scenescape-vdms-s.crt
  #     - OVERRIDE_key_file=/run/secrets/certs/scenescape-vdms-s.key
  #   secrets:
  #     - source: root-cert
  #       target: certs/scenescape-ca.pem
  #     - source: vdms-server-cert
  #       target: certs/scenescape-vdms-s.crt
  #     - source: vdms-server-key
  #       target: certs/scenescape-vdms-s.key
  #   restart: always

  retail-video:
    image: scenescape-percebro:${VERSION:-latest}
    init: true
    networks:
      scenescape:
    depends_on:
      web:
        condition: service_healthy
      broker:
        condition: service_started
      ntpserv:
        condition: service_started
    #  - ovms # Need to uncomment this to use ovms
    command:
      - "percebro"
      - "--camera=sample_data/02_frame1.jpg"
      - "--cameraid=camera1"
      - '--intrinsics={"fx":3146,"fy":3146,"cx":1920,"cy":1080}'
      - '--distortion=[-0.415,0,0,0,0]'
      - "--camerachain=retail"
      - "--ntp=ntpserv"
      - "--auth=/run/secrets/percebro.auth"
      - "broker.scenescape.intel.com"
    devices:
      - "/dev/dri:/dev/dri"
    volumes:
      - vol-models:/opt/intel/openvino/deployment_tools/intel_models
      - vol-sample-data:/home/scenescape/SceneScape/sample_data
    secrets:
      - source: root-cert
        target: certs/scenescape-ca.pem
      - percebro.auth
    restart: always

configs:
  # uncomment this section when using eclipe mosquitto broker
  mosquitto-insecure:
    file: ./dlstreamer-pipeline-server/mosquitto/mosquitto.conf
  tracker-config:
    file: ./controller/config/tracker-config.json
  queuing-config:
    file: ./dlstreamer-pipeline-server/queuing-config.json
  person-detection-queing-config:
    file: ./dlstreamer-pipeline-server/model-proc-files/person-detection-retail-0013.json

volumes:
  vol-db:
  vol-media:
  vol-migrations:
  vol-datasets:
  vol-sample-data:
  vol-models:
  vol-netvlad_models:
    driver: local
  vol-dlstreamer-pipeline-server-pipeline-root:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs

