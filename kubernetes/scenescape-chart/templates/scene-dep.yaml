# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-scene-dep
  labels:
    app: {{ .Release.Name }}-scene
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-scene
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-scene
    spec:
      securityContext:
        runAsNonRoot: true
      shareProcessNamespace: true
      initContainers:
      - name: wait-for-web-initcontainer
        image: busybox
        command: ["/bin/sh", "-c", "until wget -q --spider http://web.{{ .Release.Namespace }}.svc.cluster.local; do sleep 1; done"]
        securityContext:
          readOnlyRootFilesystem: true
          runAsUser: 1000
      containers:
        - args:
          - --restauth=/run/secrets/controller.auth
          - --brokerauth=/run/secrets/controller.auth
          - --broker
          - broker.{{ .Release.Namespace }}.svc.cluster.local
          - --resturl
          - https://web.{{ .Release.Namespace }}.svc.cluster.local/api/v1
          - --ntp
          - ntpserv.{{ .Release.Namespace }}.svc.cluster.local
          image: {{ .Values.repository }}/{{ .Values.scene.image }}:{{ .Chart.AppVersion }}
          name: {{ .Release.Name }}-scene
          env:
          - name: VDMS_HOSTNAME
            value: vdms.{{ .Release.Namespace }}.svc.cluster.local
            {{ include "proxy_envs" . | indent 10 }}
          imagePullPolicy: Always
          readinessProbe:
            exec:
              command:
              - "true"
            initialDelaySeconds: 5
            periodSeconds: 1
          securityContext:
            readOnlyRootFilesystem: true
          resources: {}
          volumeMounts:
          - mountPath: /run/secrets/certs
            name: certs
            readOnly: true
          - mountPath: /run/secrets/django
            name: django
            readOnly: true
          - mountPath: /run/secrets/controller.auth
            name: controller-auth
            readOnly: true
            subPath: controller.auth
          - mountPath: /home/scenescape/SceneScape/media
            name: media-storage
          - mountPath: /home/scenescape/SceneScape/tracker-config.json
            name: controller-storage
            subPath: tracker-config.json
      restartPolicy: Always
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: certs
        secret:
          secretName: {{ .Release.Name }}-certs
      - name: django
        secret:
          secretName: {{ .Release.Name }}-django
      - name: controller-auth
        secret:
          secretName: {{ .Release.Name }}-controller.auth
      - name: media-storage
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-media-pvc
      - name: controller-storage
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-controller-pvc
status: {}
