# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-init-sample-data
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.hooks.enabled }}
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "1"
    {{- if not .Values.chartdebug }}
    "helm.sh/hook-delete-policy": hook-succeeded
    {{- end }}
    {{- end }}
spec:
  template:
    spec:
      containers:
      - command: ["/bin/bash", "-c"]
        args:
        - |
          set -euo pipefail
          echo "Copying sample data, tracker-config.json, videos..."

          # Copy sample data
          if [ -d "/workspace/sample_data" ]; then
            mkdir -p /workspace/sample-data-storage/sample_data
            cp -r /workspace/sample_data/* /workspace/sample-data-storage/sample_data/
            echo "Copied sample_data folder."
          else
            echo "Warning: /workspace/sample_data not found"
          fi

          # Copy tracker config
          if [ -f "/workspace/controller/tracker-config.json" ]; then
            mkdir -p /workspace/controller-storage
            cp /workspace/controller/tracker-config.json /workspace/controller-storage/tracker-config.json
            echo "Copied tracker-config.json file."
          else
            echo "Warning: /workspace/controller/tracker-config.json not found"
          fi

          # Copy videos if they exist
          if [ -d "/workspace/videos" ]; then
            mkdir -p /workspace/videos-storage
            cp -r /workspace/videos/* /workspace/videos-storage/
            echo "Copied videos folder."
          else
            echo "No videos folder found, skipping."
          fi

          # Set proper ownership
          chown -R 1000:1000 /workspace/sample-data-storage /workspace/controller-storage
          if [ -d "/workspace/videos-storage" ]; then
            chown -R 1000:1000 /workspace/videos-storage
          fi

          echo "Sample data setup completed successfully"
        image: {{ .Values.repository }}/{{ .Values.initModels.image }}:{{ .Chart.AppVersion }}
        name: {{ .Release.Name }}-{{ .Values.initModels.image }}-container
        imagePullPolicy: Always
        env:
          {{ include "proxy_envs" . | indent 12 }}
        volumeMounts:
        - mountPath: /workspace/sample-data-storage
          name: sample-data-storage
        - mountPath: /workspace/controller-storage
          name: controller-storage
        - mountPath: /workspace/videos-storage
          name: videos-storage
      restartPolicy: Never
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: sample-data-storage
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-sample-data-pvc
      - name: controller-storage
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-controller-pvc
      - name: videos-storage
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-videos-pvc
  backoffLimit: 3
