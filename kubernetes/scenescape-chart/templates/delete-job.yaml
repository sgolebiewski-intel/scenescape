# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-delete
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      containers:
      - command: ["/bin/bash", "-c"]
        args:
        - echo "Cleaning up pre-install resources.";
          kubectl delete secret {{ .Release.Name }}-certs -n {{ .Release.Namespace }};
          kubectl delete secret {{ .Release.Name }}-django -n {{ .Release.Namespace }};
          kubectl delete secret {{ .Release.Name }}-scenescape-broker.key -n {{ .Release.Namespace }};
          kubectl delete secret {{ .Release.Name }}-scenescape-broker.crt -n {{ .Release.Namespace }};
          kubectl delete secret {{ .Release.Name }}-scenescape-ca.pem -n {{ .Release.Namespace }};
          kubectl delete secret {{ .Release.Name }}-controller.auth -n {{ .Release.Namespace }};
          kubectl delete secret {{ .Release.Name }}-browser.auth -n {{ .Release.Namespace }};
          kubectl delete secret {{ .Release.Name }}-calibration.auth -n {{ .Release.Namespace }};
          kubectl delete pvc {{ .Release.Name }}-pgserver-pvc -n {{ .Release.Namespace }};
          kubectl delete pvc {{ .Release.Name }}-media-pvc -n {{ .Release.Namespace }};
          kubectl delete pvc {{ .Release.Name }}-datasets-pvc -n {{ .Release.Namespace }};
          kubectl delete pvc {{ .Release.Name }}-models-pvc -n {{ .Release.Namespace }};
          kubectl delete pvc {{ .Release.Name }}-videos-pvc -n {{ .Release.Namespace }};
          kubectl delete pvc {{ .Release.Name }}-sample-data-pvc -n {{ .Release.Namespace }};
          kubectl delete pvc {{ .Release.Name }}-controller-pvc -n {{ .Release.Namespace }};
          kubectl delete pvc {{ .Release.Name }}-user-access-config-pvc -n {{ .Release.Namespace }};
          kubectl delete deploy -l release={{ .Release.Name }} -n {{ .Release.Namespace }};
          kubectl delete job scenescape-sources -n {{ .Release.Namespace }} --ignore-not-found;
        image: {{ .Values.repository }}/{{ .Values.initSecrets.image }}:{{ .Chart.AppVersion }}
        name: {{ .Values.initSecrets.image }}-container
        imagePullPolicy: Always
      restartPolicy: Never
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Release.Name }}-delete-sa
  backoffLimit: 3
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Release.Name }}-delete
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "-4"
    "helm.sh/hook-delete-policy": hook-succeeded
rules:
- apiGroups: [""]
  resources: ["secrets", "persistentvolumeclaims", "serviceaccounts"]
  verbs: ["list", "watch", "create", "delete"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings"]
  verbs: ["list", "get", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Release.Name }}-delete-binding
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "-3"
    "helm.sh/hook-delete-policy": hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Release.Name }}-delete
subjects:
- kind: ServiceAccount
  name: {{ .Release.Name }}-delete-sa
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-delete-sa
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
