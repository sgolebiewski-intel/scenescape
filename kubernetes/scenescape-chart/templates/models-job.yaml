# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

{{- if .Values.hooks.enabled }}
{{- if not (has .Values.initModels.modelType (list "default" "ocr" "all")) }}
{{- fail "initModels.modelType must be one of: default, ocr, all" }}
{{- end }}
{{- if not (kindIs "bool" .Values.initModels.modelProc) }}
{{- fail "initModels.modelProc must be a boolean (true or false)" }}
{{- end }}
{{- if not .Values.initModels.modelPrecisions }}
{{- fail "initModels.modelPrecisions cannot be empty" }}
{{- end }}
# Validate precisions format (comma-separated list of valid precisions)
{{- $validPrecisions := list "FP32" "FP16" "INT8" }}
{{- $precisions := splitList "," .Values.initModels.modelPrecisions }}
{{- range $precision := $precisions }}
{{- $trimmedPrecision := trim $precision }}
{{- if not (has $trimmedPrecision $validPrecisions) }}
{{- fail (printf "Invalid precision '%s' in modelPrecisions. Valid precisions are: FP32, FP16, INT8" $trimmedPrecision) }}
{{- end }}
{{- end }}

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-{{ .Values.initModels.image }}
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.hooks.enabled }}
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "3"
    {{- if not .Values.chartdebug }}
    "helm.sh/hook-delete-policy": hook-succeeded
    {{- end }}
    {{- end }}
spec:
  template:
    spec:
      containers:
      - command: ["/bin/bash", "-c"]
        args:
        - |
          set -euo pipefail
          echo "Starting model download and installation..."

          # Run the entrypoint script to download models
          /workspace/entrypoint.sh

          echo "Copying models to shared storage..."
          # Ensure the target directory exists
          mkdir -p /workspace/models-storage/models

          # Copy downloaded models to shared storage
          if [ -d "/workspace/models" ]; then
            cp -r /workspace/models/* /workspace/models-storage/models/
            echo "Models copied successfully"
          else
            echo "Error: No models directory found after download"
            exit 1
          fi

          # Set proper ownership for shared storage
          chown -R 1000:1000 /workspace/models-storage

          echo "Model installation and copying completed successfully"
        image: {{ .Values.repository }}/{{ .Values.initModels.image }}:{{ .Chart.AppVersion }}
        name: {{ .Release.Name }}-{{ .Values.initModels.image }}-container
        imagePullPolicy: Always
        env:
          - name: MODEL_TYPE
            value: "{{ .Values.initModels.modelType }}"
          - name: MODEL_PRECISIONS
            value: "{{ .Values.initModels.modelPrecisions }}"
          - name: MODEL_PROC
            value: "{{ .Values.initModels.modelProc }}"
          - name: MODEL_DIR
            value: "/workspace/models"
          {{ include "proxy_envs" . | indent 10 }}
        resources:
          {{- toYaml .Values.initModels.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /workspace/models-storage
          name: models-storage
      restartPolicy: Never
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: models-storage
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-models-pvc
  backoffLimit: 3
{{- end }}
