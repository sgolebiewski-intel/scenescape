# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

{{- if .Values.kubeclient.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-kubeclient-dep
  labels:
    app: {{ .Release.Name }}-kubeclient
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-kubeclient
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-kubeclient
    spec:
      shareProcessNamespace: true
      initContainers:
      - name: wait-for-broker-initcontainer
        image: busybox
        command: ["/bin/sh", "-c", "until nc -vz broker.{{ .Release.Namespace }}.svc.cluster.local 1883; do sleep 1; done"]
      - name: wait-for-web-initcontainer
        image: busybox
        command: ["/bin/sh", "-c", "until wget -q --spider http://web.{{ .Release.Namespace }}.svc.cluster.local; do sleep 1; done"]
      containers:
        - args:
          - ./manage.py
          - kubecommand
          - --broker
          - broker.{{ .Release.Namespace }}.svc.cluster.local
          - --resturl
          - https://web.{{ .Release.Namespace }}.svc.cluster.local/api/v1
          - --ntp
          - ntpserv.{{ .Release.Namespace }}.svc.cluster.local
          - --auth
          - /run/secrets/controller.auth
          image: {{ .Values.repository }}/{{ .Values.kubeclient.image }}:{{ .Chart.AppVersion }}
          name: {{ .Release.Name }}-kubeclient
          env:
          - name: KUBERNETES_NAMESPACE
            value: {{ .Release.Namespace }}
          - name: HELM_RELEASE
            value: {{ .Release.Name }}
          - name: HELM_REPO
            value: {{ .Values.repository }}
          - name: HELM_IMAGE
            value: {{ .Values.camera.image }}
          - name: HELM_TAG
            value: {{ .Chart.AppVersion | quote }}
          {{- with .Values.imagePullSecrets }}
          {{- range $index, $pullSecret := . }}
          - name: KUBERNETES_PULL_SECRET_{{ $index }}
            value: {{ $pullSecret.name | quote }}
          {{- end }}
          {{- end }}
            {{ include "proxy_envs" . | indent 12 }}
          imagePullPolicy: Always
          readinessProbe:
            exec:
              command:
              - cat
              - /tmp/healthy
            periodSeconds: 1
          resources: {}
          volumeMounts:
          - mountPath: /run/secrets/certs
            name: certs
            readOnly: true
          - mountPath: /run/secrets/django
            name: django
            readOnly: true
      restartPolicy: Always
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Release.Name }}-kubeclient-sa
      volumes:
      - name: certs
        secret:
          secretName: {{ .Release.Name }}-certs
      - name: django
        secret:
          secretName: {{ .Release.Name }}-django
status: {}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Release.Name }}-kubeclient
  namespace: {{ .Release.Namespace }}
rules:
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Release.Name }}-kubeclient-binding
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Release.Name }}-kubeclient
subjects:
- kind: ServiceAccount
  name: {{ .Release.Name }}-kubeclient-sa
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-kubeclient-sa
  namespace: {{ .Release.Namespace }}
{{ end }}
