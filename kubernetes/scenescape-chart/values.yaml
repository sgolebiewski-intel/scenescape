# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

# Default values for scenescape-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Image repository
repository: localhost:5001
imagePullSecrets: {}

# Service values
initModels:
  image: init-models
initSecrets:
  image: init-secrets
ntpserv:
  image: dockurr/chrony
  ntpServers: "0.pool.ntp.org,1.pool.ntp.org,2.pool.ntp.org,3.pool.ntp.org"
broker:
  image: eclipse-mosquitto
  tag: "2.0.22"
  uid: 1000
  gid: 1000
pgserver:
  image: scenescape-manager
  storage: 500Mi
web:
  image: scenescape-manager
scene:
  image: scenescape-controller
camcalibration:
  image: scenescape-camcalibration
# percebro - deprecated # TODO update kubeclient code to restore the dynamic camera calibration
kubeclient:
  enabled: true
retail:
  repository: docker.io/intel/dlstreamer-pipeline-server
  pullPolicy: IfNotPresent
  tag: "3.1.0-ubuntu24"
  storageClassName: "standard"
  cameras:
    image: linuxserver/ffmpeg
    tag: version-8.0-cli
    files:
    - apriltag-cam1.ts
    - apriltag-cam2.ts
queuing:
  repository: docker.io/intel/dlstreamer-pipeline-server
  pullPolicy: IfNotPresent
  tag: "3.1.0-ubuntu24"
  storageClassName: "standard"
  cameras:
    image: linuxserver/ffmpeg
    tag: version-8.0-cli
    files:
    - qcam1.ts
    - qcam2.ts
mediaserver:
  image: bluenviron/mediamtx
  tag: "1.14.0"
video:
  image: scenescape
  # models storage size
  storage: 50Gi
  storageClassName: ""
vdms:
  enabled: true

# media folder pvc details
media:
  storage: 500Mi
  storageClassName: ""

# datasets
datasets:
  storage: 500Mi
  storageClassName: ""

# videos
videos:
  storage: 2Gi
  storageClassName: ""

# sample_data
sampleData:
  storage: 500Mi
  storageClassName: ""

# controller
controller:
  storage: 500Mi
  storageClassName: ""

# user-access-config
userAccessConfig:
  storage: 50Mi
  storageClassName: ""

# PVC
pvc:
  storageClassName: ""
  hookWeight: -10

# External access
service:
  annotations: {}

ingress:
  enabled: true
  className: ""
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "128m"

loadBalancer:
  enabled: true
  externalTrafficPolicy: Local
  loadBalancerIP: ""
  annotations: {}

nodePort:
  enabled: false
  annotations: {}

mqttService:
  annotations: {}
  loadBalancer:
    enabled: false
    externalTrafficPolicy: Local
    loadBalancerIP: ""
    annotations: {}
  nodePort:
    enabled: true
    annotations: {}
    nodePort: 31883

# Other parameters
certdomain: ""
supass: "admin"
dbroot: ""
debug: false
chartdebug: false

# Proxy configuration
proxy:
  enabled: false
  httpProxy: ""
  httpsProxy: ""
  noProxy: "localhost,127.0.0.1,.local,.svc,.cluster.local,10.244.0.0/16,10.96.0.0/12"

# enable to pull scenescape-sources image during deployment
sources:
  enabled: false

# disable pre-install and post-install hooks for cluster compatibility
hooks:
  enabled: true

# enable to start SceneScape in validation mode
tests:
  enabled: false
  access:
    secretKey: "abcdefg"
    service:
      annotations: {}
    nodePort:
      enabled: true
      annotations: {}
      nodePort: 30700
    loadBalancer:
      enabled: false
      externalTrafficPolicy: Local
      loadBalancerIP: ""
      annotations: {}
  storage: 500Mi
  storageClassName: ""
  image: init-tests
  # absolute path to frps/frps images
  frpsImage: snowdreamtech/frps
  frpcImage: snowdreamtech/frpc
